[1,["9c1939e9-344b-410c-84c2-ae693558b7d1@f9941","b8bd32b4-5cf9-404b-9acf-de5c0534660d","e2ed33a5-7170-42b1-881d-4efb8bc9cd8d","85ce6b34-6c46-4d95-989f-1f98b1b0343b@6c48a","c27215d8-6835-4b68-bfbb-bdeac6100c04","16039dda-50f5-4b16-80f8-a5ef1b84be6a"],["node","_spriteFrame","_customMaterial","_effectAsset","root","data","_skeletonData","_defaultClip"],[["cc.Node",["_name","_active","_components","_prefab","_parent","_children","_lpos","_lscale"],1,9,4,1,2,5,5],["cc.UITransform",["node","__prefab","_contentSize","_anchorPoint"],3,1,4,5,5],["cc.Sprite",["node","__prefab","_spriteFrame","_color","_customMaterial"],3,1,4,6,5,6],["sp.SkeletonData",["_name","_atlasText","textureNames","_skeletonJson","textures"],-1,3],["cc.Material",["_props","_states","_defines"],0],["cc.Prefab",["_name"],2],["cc.CompPrefabInfo",["fileId"],2],["cc.Animation",["_enabled","playOnLoad","node","__prefab","_clips","_defaultClip"],1,1,4,3,6],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["sp.Skeleton",["_preCacheMode","_premultipliedAlpha","defaultSkin","defaultAnimation","node","__prefab","_skeletonData"],-1,1,4,6],["cc.EffectAsset",["_name","shaders","techniques"],0]],[[6,0,2],[8,0,1,2,2],[1,0,1,2,1],[0,0,4,2,3,6,7,2],[0,0,4,5,2,3,2],[1,0,1,2,3,1],[2,0,1,2,1],[2,0,1,3,4,2,1],[0,0,4,2,3,6,2],[1,0,1,1],[3,0,1,2,3,4,5],[4,0,1,2,4],[5,0,2],[0,0,5,2,3,2],[0,0,1,4,5,2,3,3],[0,0,4,2,3,2],[7,0,1,2,3,4,5,3],[9,0,1,2,3,4,5,6,5],[10,0,1,2,4]],[[[[10,"loading","\nloading.png\nsize: 74,41\nformat: RGBA8888\nfilter: Linear,Linear\nrepeat: none\ncs\n  rotate: false\n  xy: 52, 19\n  size: 20, 20\n  orig: 20, 20\n  offset: 0, 0\n  index: -1\nf1\n  rotate: false\n  xy: 2, 2\n  size: 48, 37\n  orig: 58, 59\n  offset: 6, 13\n  index: -1\n",["loading.png"],{"skeleton":{"hash":"ahQB6oHvkzww0w8qIooiZNEbTN0","spine":"3.8.99","x":-25.33,"y":-25.76,"width":50.65,"height":51.53,"images":"./images/","audio":""},"bones":[{"name":"root"},{"name":"bone13","parent":"root","scaleX":0.8,"scaleY":0.8},{"name":"bone","parent":"bone13"},{"name":"cs3","parent":"bone","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone2","parent":"bone13","rotation":30},{"name":"cs4","parent":"bone2","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone3","parent":"bone13","rotation":60},{"name":"cs5","parent":"bone3","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone4","parent":"bone13","rotation":90},{"name":"cs6","parent":"bone4","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone5","parent":"bone13","rotation":120},{"name":"cs7","parent":"bone5","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone6","parent":"bone13","rotation":150},{"name":"cs8","parent":"bone6","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone7","parent":"bone13","rotation":180},{"name":"cs9","parent":"bone7","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone8","parent":"bone13","rotation":-150},{"name":"cs10","parent":"bone8","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone9","parent":"bone13","rotation":-120},{"name":"cs11","parent":"bone9","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone10","parent":"bone13","rotation":-90},{"name":"cs12","parent":"bone10","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone11","parent":"bone13","rotation":-60},{"name":"cs13","parent":"bone11","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"bone12","parent":"bone13","rotation":-30},{"name":"cs14","parent":"bone12","x":55.61,"scaleX":0.7633,"scaleY":0.7633},{"name":"f1","parent":"bone13","scaleX":1.0916,"scaleY":1.0916}],"slots":[{"name":"cs4","bone":"cs3"},{"name":"cs5","bone":"cs4"},{"name":"cs6","bone":"cs5"},{"name":"cs7","bone":"cs6"},{"name":"cs8","bone":"cs7"},{"name":"cs9","bone":"cs8"},{"name":"cs10","bone":"cs9"},{"name":"cs11","bone":"cs10"},{"name":"cs12","bone":"cs11"},{"name":"cs13","bone":"cs12"},{"name":"cs14","bone":"cs13"},{"name":"cs15","bone":"cs14"},{"name":"f1","bone":"f1","attachment":"f1"}],"skins":[{"name":"default","attachments":{"cs4":{"cs":{"width":20,"height":20}},"cs5":{"cs":{"width":20,"height":20}},"cs6":{"cs":{"width":20,"height":20}},"cs7":{"cs":{"width":20,"height":20}},"cs8":{"cs":{"width":20,"height":20}},"cs9":{"cs":{"width":20,"height":20}},"cs10":{"cs":{"width":20,"height":20}},"cs11":{"cs":{"width":20,"height":20}},"cs12":{"cs":{"width":20,"height":20}},"cs13":{"cs":{"width":20,"height":20}},"cs14":{"cs":{"width":20,"height":20}},"cs15":{"cs":{"width":20,"height":20}},"f1":{"f1":{"width":58,"height":59}}}}],"animations":{"animation":{"slots":{"cs4":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.1667,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.2667,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.4,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs5":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.1,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.2333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.3667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs6":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.0333,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.1333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.2667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs7":{"color":[{"color":"ffffff2f","curve":0.333,"c2":0.33,"c3":0.758},{"time":0.1,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.2333,"color":"ffffff00","curve":"stepped"},{"time":0.7333,"color":"ffffff00","curve":0.276,"c3":0.621,"c4":0.4},{"time":0.7667,"color":"ffffff2f"}],"attachment":[{"name":"cs"}]},"cs8":{"color":[{"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.1,"color":"ffffff00","curve":"stepped"},{"time":0.6333,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.7667,"color":"ffffffff"}],"attachment":[{"name":"cs"}]},"cs9":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.5,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.6333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.7667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs10":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.4667,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.5667,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.7,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs11":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.4,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.5333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.6667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs12":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.3667,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.4667,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.6,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs13":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.3,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.4333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.5667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs14":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.2667,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.3667,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.5,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"cs15":{"color":[{"color":"ffffff00","curve":"stepped"},{"time":0.2,"color":"ffffff00","curve":0.25,"c3":0.75},{"time":0.3333,"color":"ffffffff","curve":0.25,"c3":0.75},{"time":0.4667,"color":"ffffff00"}],"attachment":[{"name":"cs"}]},"f1":{"color":[{"color":"ffffffff"},{"time":0.2,"color":"ffffff83"},{"time":0.4,"color":"ffffffff"},{"time":0.5667,"color":"ffffff76"},{"time":0.7667,"color":"ffffffff"}]}},"bones":{"f1":{"scale":[{"x":1.338,"y":1.338,"curve":0.249,"c3":0.627,"c4":0.51},{"time":0.4,"x":0.022,"y":1.338,"curve":0.377,"c2":0.51,"c3":0.749},{"time":0.7667,"x":1.338,"y":1.338}]}}}}},[0]]],0,0,[0],[-1],[3]],[[[11,[{}],[{"rasterizerState":{},"depthStencilState":{},"blendState":{"targets":[{"blendDst":1}]}}],[{}]]],0,0,[0],[3],[4]],[[[12,"loding_anim"],[13,"loding_anim",[-4,-5],[[9,-2,[0,"devaemAylAX6gLmt6pwLa1"]],[16,false,true,-3,[0,"3dAzVT4qVHMr23jG2kW82m"],[16],17]],[1,"31UC4p+hVDEZHf9C6jvcsA",-1,0]],[14,"anim",false,1,[-7,-8,-9,-10,-11],[[9,-6,[0,"f6Lyee+blJh653NLZBgE+l"]]],[1,"49ucNqQwNJX4HXJbX77tMj",1,0]],[4,"05",2,[-13,-14],[[5,-12,[0,"e6sd5XTNBJ1JGqeYkW57UO"],[5,42,42],[0,0.5,-1]]],[1,"4asZgVbPxBHo/5q4D6r3w3",1,0]],[4,"04",2,[-16,-17],[[5,-15,[0,"c3JqlfoVhNdIW/wH4NbomA"],[5,42,42],[0,0.5,-1]]],[1,"10qEMzxS1E8oz0DmSWwdGg",1,0]],[4,"03",2,[-19,-20],[[5,-18,[0,"a6AE6NlYtATbNCZpSTIUkR"],[5,42,42],[0,0.5,-1]]],[1,"7c929L9+JBtK80lCHgW9T2",1,0]],[4,"02",2,[-22,-23],[[5,-21,[0,"c5U0tK3XBLM5J0Yub0yxdm"],[5,42,42],[0,0.5,-1]]],[1,"b2G0WQwr9HJLqrQakxCQhD",1,0]],[4,"01",2,[-25,-26],[[5,-24,[0,"d4YFigb8VIka5OUracRY9j"],[5,42,42],[0,0.5,-1]]],[1,"dbEcG6S05O1qYq00B/7E7j",1,0]],[3,"Sprite",3,[[2,-27,[0,"09wQpADGhPNo/JChISBx02"],[5,46,47]],[6,-28,[0,"5ejMj9L2BHIqYe3OSJk/PZ"],0]],[1,"1dTP4HVzpKoZ2C43QP9xlr",1,0],[1,0,63.335,0],[1,0.68,0.68,1]],[3,"Sprite-001",3,[[2,-29,[0,"1eIWEyOx5ATI5oO87z7vlW"],[5,46,47]],[7,-30,[0,"83vc8QKxVLdpfc6kIhn48z"],[4,16777215],1,2]],[1,"847rzGOeJNJr5RO3/1Q80B",1,0],[1,0,63.335,0],[1,0.68,0.68,1]],[3,"Sprite",4,[[2,-31,[0,"85FmcapA9JFpAThOpUTHdl"],[5,46,47]],[6,-32,[0,"2fv9+fUoRG6Z3FzfpnYPFP"],3]],[1,"45jk+itfBE07mWPN7nl0ng",1,0],[1,0,63.335,0],[1,0.77,0.77,1]],[3,"Sprite-001",4,[[2,-33,[0,"e6hzGrS2pCT5xdBMDPzIH7"],[5,46,47]],[7,-34,[0,"9dZE9NBvRGw4eII7Cn4/fG"],[4,16777215],4,5]],[1,"cbSFoVbcxOJqO7rBDkH+XI",1,0],[1,0,63.335,0],[1,0.77,0.77,1]],[3,"Sprite",5,[[2,-35,[0,"e8SW6HkI1Hoa7fQUimkN14"],[5,46,47]],[6,-36,[0,"cdFhDPOhFD3JtSN2WAZdRZ"],6]],[1,"3cHU6l3F1HSJETLZi7SNsV",1,0],[1,0,63.335,0],[1,0.85,0.85,1]],[3,"Sprite-001",5,[[2,-37,[0,"9f8qgyJk5CHZUjnjqlyOsh"],[5,46,47]],[7,-38,[0,"f3z9coOB9OXqkLLIxLkKkf"],[4,16777215],7,8]],[1,"28uUz5mmlM16inls9C6W5J",1,0],[1,0,63.335,0],[1,0.85,0.85,1]],[3,"Sprite",6,[[2,-39,[0,"41MIsveaFLZabaJfsn/xl9"],[5,46,47]],[6,-40,[0,"b2+ZNNB2xHyL5M8wSqi+sv"],9]],[1,"43r2xkzGdH7YUDcCU1zOom",1,0],[1,0,63.335,0],[1,0.93,0.93,1]],[3,"Sprite-001",6,[[2,-41,[0,"1cJQqllkNO9KaDHbMrgoCn"],[5,46,47]],[7,-42,[0,"b7jJZTSjJKSqrKWUdfH72q"],[4,16777215],10,11]],[1,"63NDLB5w1JGZpJhEHh5BPx",1,0],[1,0,63.335,0],[1,0.93,0.93,1]],[8,"Sprite",7,[[2,-43,[0,"b4B2uEKjNKH7hkE4T0zt7L"],[5,46,47]],[6,-44,[0,"8aqickNVtJSqxrg8tG42gc"],12]],[1,"9ceKj7/LlMf4rKNNUtelRT",1,0],[1,0,63.335,0]],[8,"Sprite-001",7,[[2,-45,[0,"357o6K/LJALr/azxky88L8"],[5,46,47]],[7,-46,[0,"45hy1P3tlAtbJ7oSqNPIcx"],[4,16777215],13,14]],[1,"99PrpCowFNt6+W4m6IyRxc",1,0],[1,0,63.335,0]],[15,"spine",1,[[2,-47,[0,"eeWYbPhb1OcpMgBRd8ujay"],[5,50.65,51.53]],[17,0,false,"default","animation",-48,[0,"24tznJ8oVEnqNiWJdMx/eH"],15]],[1,"ef0nJLEtpKWIW1b2Jg/j8T",1,0]]],0,[0,4,1,0,0,1,0,0,1,0,-1,2,0,-2,18,0,0,2,0,-1,3,0,-2,4,0,-3,5,0,-4,6,0,-5,7,0,0,3,0,-1,8,0,-2,9,0,0,4,0,-1,10,0,-2,11,0,0,5,0,-1,12,0,-2,13,0,0,6,0,-1,14,0,-2,15,0,0,7,0,-1,16,0,-2,17,0,0,8,0,0,8,0,0,9,0,0,9,0,0,10,0,0,10,0,0,11,0,0,11,0,0,12,0,0,12,0,0,13,0,0,13,0,0,14,0,0,14,0,0,15,0,0,15,0,0,16,0,0,16,0,0,17,0,0,17,0,0,18,0,0,18,0,5,1,48],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[1,2,1,1,2,1,1,2,1,1,2,1,1,2,1,6,-1,7],[0,1,0,0,1,0,0,1,0,0,1,0,0,1,0,5,2,2]],[[[18,"builtin-spine",[{"hash":3192452405,"name":"builtin-spine|sprite-vs:vert|sprite-fs:frag","blocks":[{"name":"ALPHA_TEST_DATA","stageFlags":16,"binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]}],"samplerTextures":[],"samplers":[],"textures":[],"buffers":[],"images":[],"subpassInputs":[],"attributes":[{"name":"a_position","format":32,"location":0,"defines":[]},{"name":"a_texCoord","format":21,"location":1,"defines":[]},{"name":"a_color","format":44,"location":2,"defines":[]},{"name":"a_color2","format":44,"location":3,"defines":["TWO_COLORED"]}],"varyings":[{"name":"v_light","type":16,"count":1,"stageFlags":17,"location":0,"defines":[]},{"name":"uv0","type":14,"count":1,"stageFlags":17,"location":1,"defines":[]},{"name":"v_dark","type":16,"count":1,"stageFlags":17,"location":2,"defines":["TWO_COLORED"]}],"fragColors":[{"name":"cc_FragColor","typename":"vec4","type":16,"count":1,"stageFlags":16,"location":0,"defines":[]}],"glsl4":{"vert":"\nprecision highp float;\nlayout(set = 0, binding = 0) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(set = 0, binding = 1) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(set = 2, binding = 0) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nlayout(location = 0) in vec3 a_position;\nlayout(location = 1) in vec2 a_texCoord;\nlayout(location = 2) in vec4 a_color;\nlayout(location = 0) out vec4 v_light;\nlayout(location = 1) out vec2 uv0;\n#if TWO_COLORED\n  layout(location = 3) in vec4 a_color2;\n  layout(location = 2) out vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(set = 1, binding = 0) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nlayout(location = 0) in vec4 v_light;\n#if TWO_COLORED\n  layout(location = 2) in vec4 v_dark;\n#endif\nlayout(location = 1) in vec2 uv0;\nlayout(set = 2, binding = 11) uniform sampler2D cc_spriteTexture;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl3":{"vert":"\nprecision highp float;\nlayout(std140) uniform CCGlobal {\n  highp   vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_nativeSize;\n};\nlayout(std140) uniform CCCamera {\n  highp   mat4 cc_matView;\n  highp   mat4 cc_matViewInv;\n  highp   mat4 cc_matProj;\n  highp   mat4 cc_matProjInv;\n  highp   mat4 cc_matViewProj;\n  highp   mat4 cc_matViewProjInv;\n  highp   vec4 cc_cameraPos;\n  mediump vec4 cc_screenScale;\n  mediump vec4 cc_exposure;\n  mediump vec4 cc_mainLitDir;\n  mediump vec4 cc_mainLitColor;\n  mediump vec4 cc_ambientSky;\n  mediump vec4 cc_ambientGround;\n  mediump vec4 cc_fogColor;\n  mediump vec4 cc_fogBase;\n  mediump vec4 cc_fogAdd;\n  mediump vec4 cc_nearFar;\n  mediump vec4 cc_viewPort;\n};\n#if USE_LOCAL\n  layout(std140) uniform CCLocal {\n    highp mat4 cc_matWorld;\n    highp mat4 cc_matWorldIT;\n    highp vec4 cc_lightingMapUVParam;\n  };\n#endif\nin vec3 a_position;\nin vec2 a_texCoord;\nin vec4 a_color;\nout vec4 v_light;\nout vec2 uv0;\n#if TWO_COLORED\n  in vec4 a_color2;\n  out vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  layout(std140) uniform ALPHA_TEST_DATA {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nin vec4 v_light;\n#if TWO_COLORED\n  in vec4 v_dark;\n#endif\nin vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  return o;\n}\nlayout(location = 0) out vec4 cc_FragColor;\nvoid main() { cc_FragColor = frag(); }"},"glsl1":{"vert":"\nprecision highp float;\nuniform highp mat4 cc_matViewProj;\n#if USE_LOCAL\n  uniform highp mat4 cc_matWorld;\n#endif\nattribute vec3 a_position;\nattribute vec2 a_texCoord;\nattribute vec4 a_color;\nvarying vec4 v_light;\nvarying vec2 uv0;\n#if TWO_COLORED\n  attribute vec4 a_color2;\n  varying vec4 v_dark;\n#endif\nvec4 vert () {\n  vec4 pos = vec4(a_position, 1);\n  #if USE_LOCAL\n    pos = cc_matWorld * pos;\n  #endif\n  pos = cc_matViewProj * pos;\n  uv0 = a_texCoord;\n  v_light = a_color;\n  #if TWO_COLORED\n    v_dark = a_color2;\n  #endif\n  return pos;\n}\nvoid main() { gl_Position = vert(); }","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n      uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n    if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n    if (alpha < alphaThreshold) discard;\n  #endif\n}\nvarying vec4 v_light;\n#if TWO_COLORED\n  varying vec4 v_dark;\n#endif\nvarying vec2 uv0;\nuniform sampler2D cc_spriteTexture;\nvec4 frag () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if TWO_COLORED\n    vec4 texColor = vec4(1, 1, 1, 1);\n    texColor *= texture2D(cc_spriteTexture, uv0);\n     o.a = texColor.a * v_light.a;\n    o.rgb = ((texColor.a - 1.0) * v_dark.a + 1.0 - texColor.rgb) * v_dark.rgb + texColor.rgb * v_light.rgb;\n  #else\n    o *= texture2D(cc_spriteTexture, uv0);\n    o *= v_light;\n  #endif\n  ALPHA_TEST(o);\n  return o;\n}\nvoid main() { gl_FragColor = frag(); }"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]},{"name":"CCCamera","defines":[]}],"samplerTextures":[],"buffers":[],"images":[]},"locals":{"blocks":[{"name":"CCLocal","defines":["USE_LOCAL"]}],"samplerTextures":[{"name":"cc_spriteTexture","defines":[]}],"buffers":[],"images":[]},"statistics":{"CC_EFFECT_USED_VERTEX_UNIFORM_VECTORS":48,"CC_EFFECT_USED_FRAGMENT_UNIFORM_VECTORS":1}},"defines":[{"name":"USE_LOCAL","type":"boolean","defines":[]},{"name":"TWO_COLORED","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]}]}],[{"passes":[{"program":"builtin-spine|sprite-vs:vert|sprite-fs:frag","blendState":{"targets":[{"blend":true,"blendSrc":2,"blendDst":4,"blendDstAlpha":4}]},"rasterizerState":{"cullMode":0},"depthStencilState":{"depthTest":false,"depthWrite":false},"properties":{"alphaThreshold":{"type":13,"value":[0.5]}}}]}]]],0,0,[],[],[]]]]
